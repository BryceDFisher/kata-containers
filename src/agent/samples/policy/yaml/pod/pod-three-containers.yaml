---
apiVersion: v1
kind: Pod
metadata:
  name: three-containers
  labels:
    run: busybox
  annotations:
    io.katacontainers.config.agent.policy: package coco_policy

import future.keywords.in
import future.keywords.every

import input

######################################################################
# Default values:
#
# - true for requests that are allowed by default.
# - false for requests that have additional policy rules, defined below.
# - Requests that are not listed here get rejected by default.

# More detailed policy rules are below.
default CreateContainerRequest := false
default ExecProcessRequest := false

# Requests that are always allowed.
default CreateSandboxRequest := true
default DestroySandboxRequest := true
default GetOOMEventRequest := true
default GuestDetailsRequest := true
default OnlineCPUMemRequest := true
default PullImageRequest := true
default ReadStreamRequest := true
default RemoveContainerRequest := true
default SetPolicyRequest := true
default SignalProcessRequest := true
default StartContainerRequest := true
default StatsContainerRequest := true
default TtyWinResizeRequest := true
default UpdateInterfaceRequest := true
default UpdateRoutesRequest := true
default WaitProcessRequest := true
default WriteStreamRequest := true

# Configure the Agent to *allow any requests causing a policy failure*.
# This is an unsecure configuration but is useful for allowing unsecure
# pods to start, then connect to them and inspect OPA logs for the root
# cause of a failure.
# default AllowRequestsFailingPolicy := true

######################################################################
CreateContainerRequest {
    some policy_container in policy_data.containers

    policy_oci := policy_container.oci
    policy_storages := policy_container.storages

    input_oci := input.oci
    input_storages := input.storages

    print("==============================================")
    print("CreateContainerRequest: policy_oci.ociVersion")
    policy_oci.ociVersion     == input_oci.ociVersion

    print("CreateContainerRequest: policy_oci.root.readonly")
    policy_oci.root.readonly  == input_oci.root.readonly

    print("CreateContainerRequest: allow_by_annotations")
    allow_by_annotations(policy_oci, input_oci, policy_storages, input_storages)

    print("CreateContainerRequest: allow_linux")
    allow_linux(policy_oci, input_oci)

    print("CreateContainerRequest: success")
}

######################################################################
# Get "io.kubernetes.cri.sandbox-name", and correlate its value with other
# annotations and process fields.

allow_by_annotations(policy_oci, input_oci, policy_storages, input_storages) {
    print("allow_by_annotations 1: no io.kubernetes.cri.sandbox-name in policy")
    not policy_oci.annotations["io.kubernetes.cri.sandbox-name"]

    input_sandbox_name := input_oci.annotations["io.kubernetes.cri.sandbox-name"]

    print("allow_by_annotations 1: allow_by_sandbox_name", input_sandbox_name)
    allow_by_sandbox_name(policy_oci, input_oci, policy_storages, input_storages, input_sandbox_name)

    print("allow_by_annotations 1: success")
}
allow_by_annotations(policy_oci, input_oci, policy_storages, input_storages) {
    print("allow_by_annotations 2: io.kubernetes.cri.sandbox-name")
    policy_sandbox_name := policy_oci.annotations["io.kubernetes.cri.sandbox-name"]
    input_sandbox_name := input_oci.annotations["io.kubernetes.cri.sandbox-name"]

    print("allow_by_annotations 2: input sandbox =", input_sandbox_name, "policy sandbox =", policy_sandbox_name)
    policy_sandbox_name == input_sandbox_name

    print("allow_by_annotations 2: allow_by_sandbox_name", input_sandbox_name)
    allow_by_sandbox_name(policy_oci, input_oci, policy_storages, input_storages, input_sandbox_name)

    print("allow_by_annotations 2: success")
}

allow_by_sandbox_name(policy_oci, input_oci, policy_storages, input_storages, sandbox_name) {
    print("allow_by_sandbox_name: starting")

    policy_namespace := policy_oci.annotations["io.kubernetes.cri.sandbox-namespace"]
    input_namespace := input_oci.annotations["io.kubernetes.cri.sandbox-namespace"]
    print("allow_by_sandbox_name: policy_namespace =", policy_namespace, "input_namespace =", input_namespace)
    policy_namespace == input_namespace

    print("allow_by_sandbox_name: allow_by_container_types")
    allow_by_container_types(policy_oci, input_oci, sandbox_name, policy_namespace)

    print("allow_by_sandbox_name: allow_by_bundle_or_sandbox_id")
    allow_by_bundle_or_sandbox_id(policy_oci, input_oci, policy_storages, input_storages)

    print("allow_by_sandbox_name: allow_process")
    allow_process(policy_oci, input_oci, sandbox_name)

    print("allow_by_sandbox_name: success")
}

######################################################################
# - Check that the "io.kubernetes.cri.container-type" and
#   "io.katacontainers.pkg.oci.container_type" annotations
#   designate the expected type - either a "sandbox" or a
#   "container" type.
#
# - Then, validate other annotations based on the actual
#   "sandbox" or "container" value from the input container.

allow_by_container_types(policy_oci, input_oci, sandbox_name, sandbox_namespace) {
    print("allow_by_container_types: checking io.kubernetes.cri.container-type")
    
    policy_cri_type := policy_oci.annotations["io.kubernetes.cri.container-type"]
    print("allow_by_container_types: policy type =", policy_cri_type)
    
    input_cri_type := input_oci.annotations["io.kubernetes.cri.container-type"]
    print("allow_by_container_types: input type =", input_cri_type)
    
    policy_cri_type == input_cri_type

    print("allow_by_container_types: allow_by_container_type")
    allow_by_container_type(input_cri_type, policy_oci, input_oci, sandbox_name, sandbox_namespace)

    print("allow_by_container_types: success")
}

# Rules applicable to the "sandbox" container type
allow_by_container_type(input_cri_type, policy_oci, input_oci, sandbox_name, sandbox_namespace) {
    print("allow_by_container_type 1: input_cri_type =", input_cri_type)
    input_cri_type == "sandbox"

    print("allow_by_container_type 1: input hostname =", input_oci.hostname, "policy hostname =", policy_oci.hostname)
    regex.match(policy_oci.hostname, input_oci.hostname)

    input_kata_type := input_oci.annotations["io.katacontainers.pkg.oci.container_type"]
    print("allow_by_container_type 1: input container type", input_kata_type)
    input_kata_type == "pod_sandbox"

    allow_sandbox_container_name(policy_oci, input_oci)
    allow_sandbox_net_namespace(policy_oci, input_oci)
    allow_sandbox_log_directory(policy_oci, input_oci, sandbox_name, sandbox_namespace)

    print("allow_by_container_type 1: success")
}

# Rules applicable to the "container" container type
allow_by_container_type(input_cri_type, policy_oci, input_oci, sandbox_name, sandbox_namespace) {
    print("allow_by_container_type 2: input_cri_type =", input_cri_type)
    input_cri_type == "container"

    input_kata_type := input_oci.annotations["io.katacontainers.pkg.oci.container_type"]
    print("allow_by_container_type 2: input type", input_kata_type)
    input_kata_type == "pod_container"

    print("allow_by_container_type 2: allow_container_name")
    allow_container_name(policy_oci, input_oci)

    print("allow_by_container_type 2: allow_net_namespace")
    allow_net_namespace(policy_oci, input_oci)

    print("allow_by_container_type 2: allow_log_directory")
    allow_log_directory(policy_oci, input_oci)

    print("allow_by_container_type 2: success")
}

######################################################################
# "io.kubernetes.cri.container-name" annotation

allow_sandbox_container_name(policy_oci, input_oci) {
    print("allow_sandbox_container_name: container_annotation_missing")
    container_annotation_missing(policy_oci, input_oci, "io.kubernetes.cri.container-name")
    print("allow_sandbox_container_name: success")
}

allow_container_name(policy_oci, input_oci) {
    print("allow_container_name: allow_container_annotation")
    allow_container_annotation(policy_oci, input_oci, "io.kubernetes.cri.container-name")
    print("allow_container_name: success")
}

######################################################################
# Annotions required for "container" type, and not allowed for "sandbox" type.

container_annotation_missing(policy_oci, input_oci, annotation_key) {
    print("container_annotation_missing:", annotation_key)

    not policy_oci.annotations[annotation_key]
    not input_oci.annotations[annotation_key]

    print("container_annotation_missing: success")
}

allow_container_annotation(policy_oci, input_oci, annotation_key) {
    print("allow_container_annotation: annotation_key =", annotation_key)

    policy_value := policy_oci.annotations[annotation_key]
    print("allow_container_annotation: policy_value =", policy_value)

    input_value := input_oci.annotations[annotation_key]
    print("allow_container_annotation: input_value = ", input_value)

    policy_value == input_value
    print("allow_container_annotation: success")
}

######################################################################
# "nerdctl/network-namespace" annotation

allow_sandbox_net_namespace(policy_oci, input_oci) {
    print("allow_sandbox_net_namespace: start")
    policy_namespace := policy_oci.annotations["nerdctl/network-namespace"]
    input_namespace := input_oci.annotations["nerdctl/network-namespace"]

    regex.match(policy_namespace, input_namespace)
    print("allow_sandbox_net_namespace: success")
}

allow_net_namespace(policy_oci, input_oci) {
    print("allow_net_namespace: start")

    not policy_oci.annotations["nerdctl/network-namespace"]
    not input_oci.annotations["nerdctl/network-namespace"]

    print("allow_net_namespace: success")
}

######################################################################
# "io.kubernetes.cri.sandbox-log-directory" annotation

allow_sandbox_log_directory(policy_oci, input_oci, sandbox_name, sandbox_namespace) {
    print("allow_sandbox_log_directory: start")

    policy_log_directory := policy_oci.annotations["io.kubernetes.cri.sandbox-log-directory"]
    directory_regex_tmp := replace(policy_log_directory, "$(sandbox-name)", sandbox_name)
    directory_regex := replace(directory_regex_tmp, "$(sandbox-namespace)", sandbox_namespace)
    print("allow_sandbox_log_directory: policy regex =", directory_regex)

    input_log_directory := input_oci.annotations["io.kubernetes.cri.sandbox-log-directory"]
    print("allow_sandbox_log_directory: input =", input_log_directory)

    regex.match(directory_regex, input_log_directory)

    print("allow_sandbox_log_directory: success")
}

allow_log_directory(policy_oci, input_oci) {
    not policy_oci.annotations["io.kubernetes.cri.sandbox-log-directory"]
    not input_oci.annotations["io.kubernetes.cri.sandbox-log-directory"]
}

######################################################################
# Validate the linux fields from config.json.

allow_linux(policy_oci, input_oci) {
    print("allow_linux: policy namespaces =", policy_oci.linux.namespaces, "input namespaces =", input_oci.linux.namespaces)
    policy_oci.linux.namespaces     == input_oci.linux.namespaces

    print("allow_linux: allow_masked_paths")
    allow_masked_paths(policy_oci, input_oci)

    print("allow_linux: allow_readonly_paths")
    allow_readonly_paths(policy_oci, input_oci)

    print("allow_linux: success")
}

######################################################################
allow_masked_paths(policy_oci, input_oci) {
    print("allow_masked_paths 1: policy maskedPaths =", policy_oci.linux.maskedPaths)
    print("allow_masked_paths 1: input maskedPaths =", input_oci.linux.maskedPaths)

    allow_array(policy_oci.linux.maskedPaths, input_oci.linux.maskedPaths)

    print("allow_masked_paths 1: success")
}
allow_masked_paths(policy_oci, input_oci) {
    print("allow_masked_paths 2: no maskedPaths")

    not policy_oci.linux.maskedPaths
    not input_oci.linux.maskedPaths

    print("allow_masked_paths 2: success")
}

######################################################################
allow_readonly_paths(policy_oci, input_oci) {
    print("allow_readonly_paths 1: policy readonlyPaths =", policy_oci.linux.readonlyPaths)
    print("allow_readonly_paths 1: input readonlyPaths =", input_oci.linux.readonlyPaths)

    allow_array(policy_oci.linux.readonlyPaths, input_oci.linux.readonlyPaths)

    print("allow_readonly_paths 1: success")
}
allow_readonly_paths(policy_oci, input_oci) {
    print("allow_readonly_paths 2: no readonlyPaths")

    not policy_oci.linux.readonlyPaths
    not input_oci.linux.readonlyPaths

    print("allow_readonly_paths 2: success")
}

######################################################################
allow_array(policy_array, input_array) {
    every input_element in input_array {
        allow_array_element(policy_array, input_element)
    }
}

allow_array_element(policy_array, input_element) {
    print("allow_array_element: input_element =", input_element)

    some policy_element in policy_array
    policy_element == input_element

    print("allow_array_element: success")
}

######################################################################
# Get the input:
#
# - bundle_id from "io.katacontainers.pkg.oci.bundle_path"
# - sandbox_id from "io.kubernetes.cri.sandbox-id"
#
# and check their consistency with other rules.

allow_by_bundle_or_sandbox_id(policy_oci, input_oci, policy_storages, input_storages) {
    print("allow_by_bundle_or_sandbox_id: checking io.katacontainers.pkg.oci.bundle_path")
    bundle_path := input_oci.annotations["io.katacontainers.pkg.oci.bundle_path"]
    bundle_id := replace(bundle_path, "/run/containerd/io.containerd.runtime.v2.task/k8s.io/", "")

    policy_sandbox_regex := policy_oci.annotations["io.kubernetes.cri.sandbox-id"]
    sandbox_id := input_oci.annotations["io.kubernetes.cri.sandbox-id"]

    print("allow_by_bundle_or_sandbox_id: regex.match sandbox_id =", sandbox_id, "regex =", policy_sandbox_regex)
    regex.match(policy_sandbox_regex, sandbox_id)

    print("allow_by_bundle_or_sandbox_id: allow_root_path")
    allow_root_path(policy_oci, input_oci, bundle_id)

    every input_mount in input.oci.mounts {
        print("allow_by_bundle_or_sandbox_id: allow_mount")
        allow_mount(policy_oci, input_mount, bundle_id, sandbox_id)
    }

    print("allow_by_bundle_or_sandbox_id: allow_storages")
    allow_storages(policy_storages, input_storages, bundle_id, sandbox_id)

    print("allow_by_bundle_or_sandbox_id: success")
}

######################################################################
# Validate the process fields from config.json.

allow_process(policy_oci, input_oci, sandbox_name) {
    policy_process := policy_oci.process
    input_process := input_oci.process

    print("allow_process: input terminal =", input_process.terminal, "policy terminal =", policy_process.terminal)
    policy_process.terminal         == input_process.terminal

    print("allow_process: input cwd =", input_process.cwd, "policy cwd =", policy_process.cwd)
    policy_process.cwd              == input_process.cwd

    print("allow_process: input capabilities =", input_process.capabilities)
    print("allow_process: policy capabilities =", policy_process.capabilities)
    policy_process.capabilities     == input_process.capabilities

    print("allow_process: input noNewPrivileges =", input_process.noNewPrivileges, "policy noNewPrivileges =", policy_process.noNewPrivileges)
    policy_process.noNewPrivileges  == input_process.noNewPrivileges

    print("allow_process: allow_user")
    allow_user(policy_process, input_process)

    print("allow_process: allow_args")
    allow_args(policy_process, input_process)

    print("allow_process: allow_env")
    allow_env(policy_process, input_process, sandbox_name)

    print("allow_process: success")
}

######################################################################
# OCI process.user field

allow_user(policy_process, input_process) {
    policy_user := policy_process.user
    input_user := input_process.user

    # TODO: track down the reason for mcr.microsoft.com/oss/bitnami/redis:6.0.8 being
    #       executed with uid = 0 despite having "User": "1001" in its container image
    #       config.
    #print("allow_user: input uid =", input_user.uid, "policy uid =", policy_user.uid)
    #policy_user.uid                 == input_user.uid

    # TODO: track down the reason for registry.k8s.io/pause:3.9 being
    #       executed with gid = 0 despite having "65535:65535" in its container image
    #       config.
    #print("allow_user: input gid =", input_user.gid, "policy gid =", policy_user.gid)
    #policy_user.gid                 == input_user.gid

    # TODO: compare the additionalGids field too after computing its value
    # based on /etc/passwd and /etc/group from the container image.
}

######################################################################
# OCI process.args field

allow_args(policy_process, input_process) {
    print("allow_args 1: no args")

    not policy_process.args
    not input_process.args

    print("allow_args 1: success")
}
allow_args(policy_process, input_process) {
    print("allow_args 2: policy args =", policy_process.args)
    print("allow_args 2: input args =", input_process.args)

    count(policy_process.args) == count(input_process.args)

    every i, input_arg in input_process.args {
        allow_arg(i, input_arg, policy_process)
    }

    print("allow_args 2: success")
}

allow_arg(i, input_arg, policy_process) {
    print("allow_arg 1: i =", i, "input_arg =", input_arg, "policy_arg =", policy_process.args[i])
    input_arg == policy_process.args[i]
    print("allow_arg 1: success")
}
allow_arg(i, input_arg, policy_process) {
    print("allow_arg 2: i =", i, "input_arg =", input_arg, "policy_arg =", policy_process.args[i])

    # TODO: can $(node-name) be handled better?
    contains(policy_process.args[i], "$(node-name)")

    print("allow_arg 2: success")
}

######################################################################
# OCI process.env field

allow_env(policy_process, input_process, sandbox_name) {
    print("allow_env: policy env =", policy_process.env)

    every env_var in input_process.env {
        print("allow_env => allow_env_var:", env_var)
        allow_env_var(policy_process, input_process, env_var, sandbox_name)
    }

    print("allow_env: success")
}

# Allow input env variables that are present in the policy data too.
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 1: some policy_env_var == env_var")

    some policy_env_var in policy_process.env
    policy_env_var == env_var

    print("allow_env_var 1: success")
}

# Match input with one of the policy variables, after substituting $(sandbox-name).
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 2: replace $(sandbox-name)")

    some policy_env_var in policy_process.env
    policy_var = replace(policy_env_var, "$(sandbox-name)", sandbox_name)

    print("allow_env_var 2: input =", env_var, "policy =", policy_var)
    policy_var == env_var

    print("allow_env_var 2: success")
}

# Allow service-related env variables:

# "KUBERNETES_PORT_443_TCP_PROTO=tcp"
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 3: KUBERNETES_PORT_443_TCP_PROTO=tcp")

    name_value := split(env_var, "=")
    count(name_value) == 2

    name_value[1] == "tcp"

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 5
    name_components[components_count - 1] == "PROTO"
    name_components[components_count - 2] == "TCP"
    name_components[components_count - 4] == "PORT"
    port := name_components[components_count - 3]
    is_port(port)

    print("allow_env_var 3: success")
}

# "KUBERNETES_PORT_443_TCP_PORT=443"
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 4: KUBERNETES_PORT_443_TCP_PORT=443")

    name_value := split(env_var, "=")
    count(name_value) == 2

    port = name_value[1]
    is_port(port)

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 5
    name_components[components_count - 1] == "PORT"
    name_components[components_count - 2] == "TCP"
    name_components[components_count - 3] == port
    name_components[components_count - 4] == "PORT"

    print("allow_env_var 4: success")
}

# "KUBERNETES_PORT_443_TCP_ADDR=10.0.0.1"
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 5: KUBERNETES_PORT_443_TCP_ADDR=10.0.0.1")

    name_value := split(env_var, "=")
    count(name_value) == 2

    is_ip(name_value[1])

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 5
    name_components[components_count - 1] == "ADDR"
    name_components[components_count - 2] == "TCP"
    name_components[components_count - 4] == "PORT"
    port := name_components[components_count - 3]
    is_port(port)

    print("allow_env_var 5: success")
}

# "KUBERNETES_SERVICE_HOST=10.0.0.1",
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 6: KUBERNETES_SERVICE_HOST=10.0.0.1")

    name_value := split(env_var, "=")
    count(name_value) == 2

    is_ip(name_value[1])

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 3
    name_components[components_count - 1] == "HOST"
    name_components[components_count - 2] == "SERVICE"

    print("allow_env_var 6: success")
}

# "KUBERNETES_SERVICE_PORT=443",
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 7: KUBERNETES_SERVICE_PORT=443")

    name_value := split(env_var, "=")
    count(name_value) == 2

    is_port(name_value[1])

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 3
    name_components[components_count - 1] == "PORT"
    name_components[components_count - 2] == "SERVICE"

    print("allow_env_var 7: success")
}

# "KUBERNETES_SERVICE_PORT_HTTPS=443",
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 8: KUBERNETES_SERVICE_PORT_HTTPS=443")

    name_value := split(env_var, "=")
    count(name_value) == 2

    is_port(name_value[1])

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 4
    name_components[components_count - 1] == "HTTPS"
    name_components[components_count - 2] == "PORT"
    name_components[components_count - 3] == "SERVICE"

    print("allow_env_var 8: success")
}

# "KUBERNETES_PORT=tcp://10.0.0.1:443",
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 9: KUBERNETES_PORT=tcp://10.0.0.1:443")

    name_value := split(env_var, "=")
    count(name_value) == 2

    is_tcp_uri(name_value[1])

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 2
    name_components[components_count - 1] == "PORT"

    print("allow_env_var 9: success")
}

# "KUBERNETES_PORT_443_TCP=tcp://10.0.0.1:443",
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 10: KUBERNETES_PORT_443_TCP=tcp://10.0.0.1:443")

    name_value := split(env_var, "=")
    count(name_value) == 2

    name_components = split(name_value[0], "_")
    components_count := count(name_components)
    components_count >= 4
    name_components[components_count - 1] == "TCP"
    name_components[components_count - 3] == "PORT"
    port := name_components[components_count - 2]
    is_port(port)

    is_tcp_uri(name_value[1])
    value_components = split(name_value[1], ":")
    count(value_components) == 3
    value_components[2] == port

    print("allow_env_var 10: success")
}

# Allow fieldRef "fieldPath: status.podIP" values.
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 11: fieldPath: status.podIP")

    name_value := split(env_var, "=")
    count(name_value) == 2
    is_ip(name_value[1])

    some policy_env_var in policy_process.env
    allow_pod_ip_var(name_value[0], policy_env_var)

    print("allow_env_var 11: success")
}

# Allow fieldRef "fieldPath: spec.nodeName" values.
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 12: fieldPath: spec.nodeName")

    name_value := split(env_var, "=")
    count(name_value) == 2
    # TODO: check that name_value[1] looks like a hostname.

    some policy_env_var in policy_process.env
    policy_name_value := split(policy_env_var, "=")
    count(policy_name_value) == 2

    policy_name_value[0] == name_value[0]
    policy_name_value[1] == "$(node-name)"

    print("allow_env_var 12: success")
}

# Allow fieldRef "fieldPath: status.hostIP" values.
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 13: fieldPath: status.hostIP")

    name_value := split(env_var, "=")
    count(name_value) == 2
    is_ip(name_value[1])

    some policy_env_var in policy_process.env
    allow_host_ip_var(name_value[0], policy_env_var)

    print("allow_env_var 13: success")
}

# Allow resourceFieldRef values (e.g., "limits.cpu").
allow_env_var(policy_process, input_process, env_var, sandbox_name) {
    print("allow_env_var 14: resourceFieldRef")

    name_value := split(env_var, "=")
    count(name_value) == 2

    some policy_env_var in policy_process.env
    policy_name_value := split(policy_env_var, "=")
    count(policy_name_value) == 2

    policy_name_value[0] == name_value[0]

    # TODO: should these be handled in a different way?
    always_allowed = ["$(resource-field)", "$(job-completion-index)"]
    some allowed in always_allowed
    contains(policy_name_value[1], allowed)

    print("allow_env_var 14: success")
}


allow_pod_ip_var(var_name, policy_env_var) {
    print("allow_pod_ip_var: var_name =", var_name, "policy_env_var =", policy_env_var)

    policy_name_value := split(policy_env_var, "=")
    count(policy_name_value) == 2

    policy_name_value[0] == var_name
    policy_name_value[1] == "$(pod-ip)"

    print("allow_pod_ip_var: success")
}

allow_host_ip_var(var_name, policy_env_var) {
    print("allow_host_ip_var: var_name =", var_name, "policy_env_var =", policy_env_var)

    policy_name_value := split(policy_env_var, "=")
    count(policy_name_value) == 2

    policy_name_value[0] == var_name
    policy_name_value[1] == "$(host-ip)"

    print("allow_host_ip_var: success")
}

is_ip(value) {
    bytes = split(value, ".")
    count(bytes) == 4

    is_ip_first_byte(bytes[0])
    is_ip_other_byte(bytes[1])
    is_ip_other_byte(bytes[2])
    is_ip_other_byte(bytes[3])
}
is_ip_first_byte(component) {
    number = to_number(component)
    number >= 1
    number <= 255
}
is_ip_other_byte(component) {
    number = to_number(component)
    number >= 0
    number <= 255
}

is_port(value) {
    number = to_number(value)
    number >= 1
    number <= 65635
}

# E.g., "tcp://10.0.0.1:443"
is_tcp_uri(value) {
    components = split(value, "//")
    count(components) == 2
    components[0] == "tcp:"

    ip_and_port = split(components[1], ":")
    count(ip_and_port) == 2
    is_ip(ip_and_port[0])
    is_port(ip_and_port[1])
}

######################################################################
# OCI root.path

allow_root_path(policy_oci, input_oci, bundle_id) {
    policy_path := replace(policy_oci.root.path, "$(bundle-id)", bundle_id)
    policy_path == input_oci.root.path
}

######################################################################
# mounts

allow_mount(policy_oci, input_mount, bundle_id, sandbox_id) {
    print("allow_mount: input_mount.destination =", input_mount.destination)

    some policy_mount in policy_oci.mounts
    policy_mount_allows(policy_mount, input_mount, bundle_id, sandbox_id)

    # TODO: are there any other required policy checks for mounts - e.g.,
    #       multiple mounts with same source or destination?
}

policy_mount_allows(policy_mount, input_mount, bundle_id, sandbox_id) {
    print("policy_mount_allows 1: policy_mount =", policy_mount)
    print("policy_mount_allows 1: input_mount =", input_mount)

    policy_mount == input_mount

    print("policy_mount_allows 1 success")
}
policy_mount_allows(policy_mount, input_mount, bundle_id, sandbox_id) {
    print("policy_mount_allows 2: input_mount.destination =", input_mount.destination, "policy_mount.destination =", policy_mount.destination)
    policy_mount.destination    == input_mount.destination

    print("policy_mount_allows 2: input type =", input_mount.type, "policy type =", policy_mount.type)
    policy_mount.type           == input_mount.type

    print("policy_mount_allows 2: input options =", input_mount.options)
    print("policy_mount_allows 2: policy options =", policy_mount.options)
    policy_mount.options        == input_mount.options

    print("policy_mount_allows 2: policy_mount_source_allows")
    policy_mount_source_allows(policy_mount, input_mount, bundle_id, sandbox_id)

    print("policy_mount_allows 2: success")
}

policy_mount_source_allows(policy_mount, input_mount, bundle_id, sandbox_id) {
    # E.g., "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-resolv.conf$",
    policy_source_regex := replace(policy_mount.source, "$(bundle-id)", bundle_id)
    print("policy_mount_source_allows 1: policy_source_regex =", policy_source_regex)

    print("policy_mount_source_allows 1: input_mount.source=", input_mount.source)
    regex.match(policy_source_regex, input_mount.source)

    print("policy_mount_source_allows 1: success")
}
policy_mount_source_allows(policy_mount, input_mount, bundle_id, sandbox_id) {
    # E.g., "source": "^/run/kata-containers/shared/containers/$(sandbox-id)/rootfs/local/data$",
    policy_source_regex := replace(policy_mount.source, "$(sandbox-id)", sandbox_id)

    print("policy_mount_source_allows 2: policy_source_regex =", policy_source_regex, "input_mount.source=", input_mount.source)
    regex.match(policy_source_regex, input_mount.source)

    print("policy_mount_source_allows 2: success")
}

######################################################################
# Storages

allow_storages(policy_storages, input_storages, bundle_id, sandbox_id) {
    policy_count := count(policy_storages)
    input_count := count(input_storages)
    print("allow_storages: policy_count =", policy_count, "input_count =", input_count)
    policy_count == input_count

    some i, input_storage in input_storages
    allow_input_storage(i, input_storage, policy_storages, policy_count, bundle_id, sandbox_id)

    print("allow_storages: success")
}

allow_input_storage(i, input_storage, policy_storages, count, bundle_id, sandbox_id) {
    print("allow_input_storage: i =", i, "input_storage =", input_storage)

    policy_storage := policy_storages[i]
    print("allow_input_storage: i =", i, "policy_storage =", policy_storage)

    storages_match(policy_storage, input_storage, bundle_id, sandbox_id)

    # Stop when reaching the last element of the storages array.
    i == count - 1
}

storages_match(policy_storage, input_storage, bundle_id, sandbox_id) {
    policy_storage.driver           == input_storage.driver
    policy_storage.driver_options   == input_storage.driver_options
    policy_storage.options          == input_storage.options
    policy_storage.fs_group         == input_storage.fs_group

    allow_mount_point(policy_storage, input_storage, bundle_id, sandbox_id)

    # TODO: validate the source field too.

    print("storages_match: success")
}

allow_mount_point(policy_storage, input_storage, bundle_id, sandbox_id) {
    print("allow_mount_point 1: fstype == tar")
    policy_storage.fstype == "tar"

    print("allow_mount_point 1: policy_storage.mount_point == input_storage.mount_point")
    policy_storage.mount_point == input_storage.mount_point

    print("allow_mount_point 1: success")
}
allow_mount_point(policy_storage, input_storage, bundle_id, sandbox_id) {
    print("allow_mount_point 2: fstype == tar-overlay")
    policy_storage.fstype == "tar-overlay"

    policy_mount_point := replace(policy_storage.mount_point, "$(bundle-id)", bundle_id)
    print("allow_mount_point 2: policy_mount_point =", policy_mount_point)

    policy_mount_point == input_storage.mount_point

    print("allow_mount_point 2: success")
}
allow_mount_point(policy_storage, input_storage, bundle_id, sandbox_id) {
    print("allow_mount_point 3: fstype == local")
    policy_storage.fstype == "local"

    mount_point_regex := replace(policy_storage.mount_point, "$(sandbox-id)", sandbox_id)
    print("allow_mount_point 3: mount_point_regex =", mount_point_regex)

    regex.match(mount_point_regex, input_storage.mount_point)

    print("allow_mount_point 3: success")
}
allow_mount_point(policy_storage, input_storage, bundle_id, sandbox_id) {
    print("allow_mount_point 4: fstype == bind")
    policy_storage.fstype == "bind"

    mount_point_regex := replace(policy_storage.mount_point, "$(bundle-id)", bundle_id)
    print("allow_mount_point 4: mount_point_regex =", mount_point_regex)

    regex.match(mount_point_regex, input_storage.mount_point)

    print("allow_mount_point 4: success")
}

######################################################################
ExecProcessRequest {
    print("==============================================")
    input_command = concat(" ", input.process.args)
    print("ExecProcessRequest: input_command =", input_command)

    some container in policy_data.containers
    some policy_command in container.exec_commands
    print("ExecProcessRequest: policy_command =", policy_command)

    # TODO: should other input data fields be validated as well?
    policy_command == input_command

    print("ExecProcessRequest: success")
}

policy_data := {
  "containers": [
    {
      "oci": {
        "ociVersion": "1.1.0-rc.1",
        "process": {
          "terminal": false,
          "user": {
            "uid": 65535,
            "gid": 65535
          },
          "args": [
            "/pause"
          ],
          "env": [
            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
          ],
          "cwd": "/",
          "capabilities": {
            "bounding": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ],
            "effective": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ],
            "permitted": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ]
          },
          "noNewPrivileges": true
        },
        "root": {
          "path": "/run/kata-containers/shared/containers/$(bundle-id)",
          "readonly": true
        },
        "hostname": "^three-containers$",
        "mounts": [
          {
            "destination": "/proc",
            "type": "proc",
            "source": "proc",
            "options": [
              "nosuid",
              "noexec",
              "nodev"
            ]
          },
          {
            "destination": "/dev",
            "type": "tmpfs",
            "source": "tmpfs",
            "options": [
              "nosuid",
              "strictatime",
              "mode=755",
              "size=65536k"
            ]
          },
          {
            "destination": "/dev/pts",
            "type": "devpts",
            "source": "devpts",
            "options": [
              "nosuid",
              "noexec",
              "newinstance",
              "ptmxmode=0666",
              "mode=0620",
              "gid=5"
            ]
          },
          {
            "destination": "/dev/shm",
            "type": "bind",
            "source": "/run/kata-containers/sandbox/shm",
            "options": [
              "rbind"
            ]
          },
          {
            "destination": "/dev/mqueue",
            "type": "mqueue",
            "source": "mqueue",
            "options": [
              "nosuid",
              "noexec",
              "nodev"
            ]
          },
          {
            "destination": "/sys",
            "type": "sysfs",
            "source": "sysfs",
            "options": [
              "nosuid",
              "noexec",
              "nodev",
              "ro"
            ]
          },
          {
            "destination": "/etc/resolv.conf",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-resolv.conf$",
            "options": [
              "rbind",
              "ro",
              "nosuid",
              "nodev",
              "noexec"
            ]
          }
        ],
        "annotations": {
          "io.katacontainers.pkg.oci.bundle_path": "/run/containerd/io.containerd.runtime.v2.task/k8s.io/$(bundle-id)",
          "io.katacontainers.pkg.oci.container_type": "pod_sandbox",
          "io.kubernetes.cri.container-type": "sandbox",
          "io.kubernetes.cri.sandbox-id": "^[a-z0-9]{64}$",
          "io.kubernetes.cri.sandbox-log-directory": "^/var/log/pods/$(sandbox-namespace)_$(sandbox-name)_[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "io.kubernetes.cri.sandbox-name": "three-containers",
          "io.kubernetes.cri.sandbox-namespace": "default",
          "nerdctl/network-namespace": "^/var/run/netns/cni-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
        },
        "linux": {
          "namespaces": [
            {
              "type": "ipc"
            },
            {
              "type": "uts"
            },
            {
              "type": "mount"
            }
          ],
          "maskedPaths": [
            "/proc/acpi",
            "/proc/asound",
            "/proc/kcore",
            "/proc/keys",
            "/proc/latency_stats",
            "/proc/timer_list",
            "/proc/timer_stats",
            "/proc/sched_debug",
            "/sys/firmware",
            "/proc/scsi"
          ],
          "readonlyPaths": [
            "/proc/bus",
            "/proc/fs",
            "/proc/irq",
            "/proc/sys",
            "/proc/sysrq-trigger"
          ]
        }
      },
      "storages": [
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=817250f1a3e336da76f5bd3fa784e1b26d959b9c131876815ba2604048b70c18"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/5a5aad80055ff20012a50dc25f8df7a29924474324d65f7d5306ee8ee27ff71d",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "overlayfs",
          "driver_options": [],
          "source": "",
          "fstype": "tar-overlay",
          "options": [
            "io.katacontainers.fs-opt.layer-src-prefix=/var/lib/containerd/io.containerd.snapshotter.v1.tardev/layers",
            "io.katacontainers.fs-opt.layer=5a5aad80055ff20012a50dc25f8df7a29924474324d65f7d5306ee8ee27ff71d,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=817250f1a3e336da76f5bd3fa784e1b26d959b9c131876815ba2604048b70c18",
            "io.katacontainers.fs-opt.overlay-rw",
            "lowerdir=5a5aad80055ff20012a50dc25f8df7a29924474324d65f7d5306ee8ee27ff71d"
          ],
          "mount_point": "/run/kata-containers/shared/containers/$(bundle-id)",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        }
      ],
      "exec_commands": []
    },
    {
      "oci": {
        "ociVersion": "1.1.0-rc.1",
        "process": {
          "terminal": false,
          "user": {
            "uid": 0,
            "gid": 0
          },
          "args": [
            "az",
            "--help"
          ],
          "env": [
            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
            "HOSTNAME=$(sandbox-name)"
          ],
          "cwd": "/",
          "capabilities": {
            "bounding": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ],
            "effective": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ],
            "permitted": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ]
          },
          "noNewPrivileges": false
        },
        "root": {
          "path": "/run/kata-containers/shared/containers/$(bundle-id)",
          "readonly": false
        },
        "hostname": "^three-containers$",
        "mounts": [
          {
            "destination": "/proc",
            "type": "proc",
            "source": "proc",
            "options": [
              "nosuid",
              "noexec",
              "nodev"
            ]
          },
          {
            "destination": "/dev",
            "type": "tmpfs",
            "source": "tmpfs",
            "options": [
              "nosuid",
              "strictatime",
              "mode=755",
              "size=65536k"
            ]
          },
          {
            "destination": "/dev/pts",
            "type": "devpts",
            "source": "devpts",
            "options": [
              "nosuid",
              "noexec",
              "newinstance",
              "ptmxmode=0666",
              "mode=0620",
              "gid=5"
            ]
          },
          {
            "destination": "/dev/shm",
            "type": "bind",
            "source": "/run/kata-containers/sandbox/shm",
            "options": [
              "rbind"
            ]
          },
          {
            "destination": "/dev/mqueue",
            "type": "mqueue",
            "source": "mqueue",
            "options": [
              "nosuid",
              "noexec",
              "nodev"
            ]
          },
          {
            "destination": "/sys",
            "type": "sysfs",
            "source": "sysfs",
            "options": [
              "nosuid",
              "noexec",
              "nodev",
              "ro"
            ]
          },
          {
            "destination": "/sys/fs/cgroup",
            "type": "cgroup",
            "source": "cgroup",
            "options": [
              "nosuid",
              "noexec",
              "nodev",
              "relatime",
              "ro"
            ]
          },
          {
            "destination": "/etc/hosts",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-hosts$",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/dev/termination-log",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-termination-log$",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/etc/hostname",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-hostname$",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/etc/resolv.conf",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-resolv.conf$",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/var/run/secrets/kubernetes.io/serviceaccount",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-serviceaccount$",
            "options": [
              "rbind",
              "rprivate",
              "ro"
            ]
          }
        ],
        "annotations": {
          "io.katacontainers.pkg.oci.bundle_path": "/run/containerd/io.containerd.runtime.v2.task/k8s.io/$(bundle-id)",
          "io.katacontainers.pkg.oci.container_type": "pod_container",
          "io.kubernetes.cri.container-name": "mariner-cli",
          "io.kubernetes.cri.container-type": "container",
          "io.kubernetes.cri.image-name": "mcr.microsoft.com/cbl-mariner/base/azure-cli:2.49.0-1-cm2.0.20230609-amd64",
          "io.kubernetes.cri.sandbox-id": "^[a-z0-9]{64}$",
          "io.kubernetes.cri.sandbox-name": "three-containers",
          "io.kubernetes.cri.sandbox-namespace": "default"
        },
        "linux": {
          "namespaces": [
            {
              "type": "ipc"
            },
            {
              "type": "uts"
            },
            {
              "type": "mount"
            }
          ],
          "maskedPaths": [
            "/proc/acpi",
            "/proc/kcore",
            "/proc/keys",
            "/proc/latency_stats",
            "/proc/timer_list",
            "/proc/timer_stats",
            "/proc/sched_debug",
            "/proc/scsi",
            "/sys/firmware"
          ],
          "readonlyPaths": [
            "/proc/asound",
            "/proc/bus",
            "/proc/fs",
            "/proc/irq",
            "/proc/sys",
            "/proc/sysrq-trigger"
          ]
        }
      },
      "storages": [
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=b57ba6f362e9d33bac5ed2467970cf6392d7f34a52685a00d57456be7c3ca9c1"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/6878f2bcd653669fb7c4432bdf0850234b1a205d59aba403d5083a401044123c",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=dd223d9bdf15f22ef586fcdaa01082719d73f7d466f4e020be6028ac4c4b3849"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/b52cbb55bfcf0b3dba321d95a3f8467207c4974fe10a617241c0e40625c2213b",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=a04974b1adb63cc2305e6109ff18117990d4bedfecd591ece8d1250ca5203f8f"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/24c665cb0b67c75fec72b6cf12dd6ca87c9b50dd27ab753259b48eb220f10554",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=612a798e15a80ace6222225ef833493b9c1d88fa06d950b38a3ef27d97c8b6b8"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/716219593ec5538487a91318723cc722a29f71a4d5cecfd7af352344f6e05953",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "overlayfs",
          "driver_options": [],
          "source": "",
          "fstype": "tar-overlay",
          "options": [
            "io.katacontainers.fs-opt.layer-src-prefix=/var/lib/containerd/io.containerd.snapshotter.v1.tardev/layers",
            "io.katacontainers.fs-opt.layer=6878f2bcd653669fb7c4432bdf0850234b1a205d59aba403d5083a401044123c,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=b57ba6f362e9d33bac5ed2467970cf6392d7f34a52685a00d57456be7c3ca9c1",
            "io.katacontainers.fs-opt.layer=b52cbb55bfcf0b3dba321d95a3f8467207c4974fe10a617241c0e40625c2213b,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=dd223d9bdf15f22ef586fcdaa01082719d73f7d466f4e020be6028ac4c4b3849",
            "io.katacontainers.fs-opt.layer=24c665cb0b67c75fec72b6cf12dd6ca87c9b50dd27ab753259b48eb220f10554,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=a04974b1adb63cc2305e6109ff18117990d4bedfecd591ece8d1250ca5203f8f",
            "io.katacontainers.fs-opt.layer=716219593ec5538487a91318723cc722a29f71a4d5cecfd7af352344f6e05953,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=612a798e15a80ace6222225ef833493b9c1d88fa06d950b38a3ef27d97c8b6b8",
            "io.katacontainers.fs-opt.overlay-rw",
            "lowerdir=6878f2bcd653669fb7c4432bdf0850234b1a205d59aba403d5083a401044123c:b52cbb55bfcf0b3dba321d95a3f8467207c4974fe10a617241c0e40625c2213b:24c665cb0b67c75fec72b6cf12dd6ca87c9b50dd27ab753259b48eb220f10554:716219593ec5538487a91318723cc722a29f71a4d5cecfd7af352344f6e05953"
          ],
          "mount_point": "/run/kata-containers/shared/containers/$(bundle-id)",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        }
      ],
      "exec_commands": []
    },
    {
      "oci": {
        "ociVersion": "1.1.0-rc.1",
        "process": {
          "terminal": false,
          "user": {
            "uid": 0,
            "gid": 0
          },
          "args": [
            "/bin/echo",
            "hello"
          ],
          "env": [
            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
            "HOSTNAME=$(sandbox-name)"
          ],
          "cwd": "/",
          "capabilities": {
            "bounding": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ],
            "effective": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ],
            "permitted": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ]
          },
          "noNewPrivileges": true
        },
        "root": {
          "path": "/run/kata-containers/shared/containers/$(bundle-id)",
          "readonly": true
        },
        "hostname": "^three-containers$",
        "mounts": [
          {
            "destination": "/proc",
            "type": "proc",
            "source": "proc",
            "options": [
              "nosuid",
              "noexec",
              "nodev"
            ]
          },
          {
            "destination": "/dev",
            "type": "tmpfs",
            "source": "tmpfs",
            "options": [
              "nosuid",
              "strictatime",
              "mode=755",
              "size=65536k"
            ]
          },
          {
            "destination": "/dev/pts",
            "type": "devpts",
            "source": "devpts",
            "options": [
              "nosuid",
              "noexec",
              "newinstance",
              "ptmxmode=0666",
              "mode=0620",
              "gid=5"
            ]
          },
          {
            "destination": "/dev/shm",
            "type": "bind",
            "source": "/run/kata-containers/sandbox/shm",
            "options": [
              "rbind"
            ]
          },
          {
            "destination": "/dev/mqueue",
            "type": "mqueue",
            "source": "mqueue",
            "options": [
              "nosuid",
              "noexec",
              "nodev"
            ]
          },
          {
            "destination": "/sys",
            "type": "sysfs",
            "source": "sysfs",
            "options": [
              "nosuid",
              "noexec",
              "nodev",
              "ro"
            ]
          },
          {
            "destination": "/sys/fs/cgroup",
            "type": "cgroup",
            "source": "cgroup",
            "options": [
              "nosuid",
              "noexec",
              "nodev",
              "relatime",
              "ro"
            ]
          },
          {
            "destination": "/etc/hosts",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-hosts$",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/dev/termination-log",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-termination-log$",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/etc/hostname",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-hostname$",
            "options": [
              "rbind",
              "rprivate",
              "ro"
            ]
          },
          {
            "destination": "/etc/resolv.conf",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-resolv.conf$",
            "options": [
              "rbind",
              "rprivate",
              "ro"
            ]
          },
          {
            "destination": "/var/run/secrets/kubernetes.io/serviceaccount",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-serviceaccount$",
            "options": [
              "rbind",
              "rprivate",
              "ro"
            ]
          }
        ],
        "annotations": {
          "io.katacontainers.pkg.oci.bundle_path": "/run/containerd/io.containerd.runtime.v2.task/k8s.io/$(bundle-id)",
          "io.katacontainers.pkg.oci.container_type": "pod_container",
          "io.kubernetes.cri.container-name": "busybox",
          "io.kubernetes.cri.container-type": "container",
          "io.kubernetes.cri.image-name": "mcr.microsoft.com/aks/e2e/library-busybox:master.220314.1-linux-amd64",
          "io.kubernetes.cri.sandbox-id": "^[a-z0-9]{64}$",
          "io.kubernetes.cri.sandbox-name": "three-containers",
          "io.kubernetes.cri.sandbox-namespace": "default"
        },
        "linux": {
          "namespaces": [
            {
              "type": "ipc"
            },
            {
              "type": "uts"
            },
            {
              "type": "mount"
            }
          ],
          "maskedPaths": [
            "/proc/acpi",
            "/proc/kcore",
            "/proc/keys",
            "/proc/latency_stats",
            "/proc/timer_list",
            "/proc/timer_stats",
            "/proc/sched_debug",
            "/proc/scsi",
            "/sys/firmware"
          ],
          "readonlyPaths": [
            "/proc/asound",
            "/proc/bus",
            "/proc/fs",
            "/proc/irq",
            "/proc/sys",
            "/proc/sysrq-trigger"
          ]
        }
      },
      "storages": [
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=8568c70c0ccfe0051092e818da769111a59882cd19dd799d3bca5ffa82791080"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/2c342a137e693c7898aec36da1047f191dc7c1687e66198adacc439cf4adf379",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=b643b6217748983830b26ac14a35a3322dd528c00963eaadd91ef55f513dc73f"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/2570e3a19e1bf20ddda45498a9627f61555d2d6c01479b9b76460b679b27d552",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "overlayfs",
          "driver_options": [],
          "source": "",
          "fstype": "tar-overlay",
          "options": [
            "io.katacontainers.fs-opt.layer-src-prefix=/var/lib/containerd/io.containerd.snapshotter.v1.tardev/layers",
            "io.katacontainers.fs-opt.layer=2c342a137e693c7898aec36da1047f191dc7c1687e66198adacc439cf4adf379,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=8568c70c0ccfe0051092e818da769111a59882cd19dd799d3bca5ffa82791080",
            "io.katacontainers.fs-opt.layer=2570e3a19e1bf20ddda45498a9627f61555d2d6c01479b9b76460b679b27d552,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=b643b6217748983830b26ac14a35a3322dd528c00963eaadd91ef55f513dc73f",
            "io.katacontainers.fs-opt.overlay-rw",
            "lowerdir=2c342a137e693c7898aec36da1047f191dc7c1687e66198adacc439cf4adf379:2570e3a19e1bf20ddda45498a9627f61555d2d6c01479b9b76460b679b27d552"
          ],
          "mount_point": "/run/kata-containers/shared/containers/$(bundle-id)",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        }
      ],
      "exec_commands": []
    },
    {
      "oci": {
        "ociVersion": "1.1.0-rc.1",
        "process": {
          "terminal": false,
          "user": {
            "uid": 0,
            "gid": 0
          },
          "args": [
            "/opt/startup/init_container.sh"
          ],
          "env": [
            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/oryx:/home/site/wwwroot",
            "DEBIAN_FLAVOR=bullseye",
            "ORYX_SDK_STORAGE_BASE_URL=https://oryx-cdn.microsoft.io",
            "ENABLE_DYNAMIC_INSTALL=true",
            "ORYX_AI_INSTRUMENTATION_KEY=4aadba6b-30c8-42db-9b93-024d5c62b887",
            "HOME_SITE=/home/site/wwwroot",
            "APP_PATH=/home/site/wwwroot",
            "PORT=8080",
            "SSH_PORT=2222",
            "WEBSITE_ROLE_INSTANCE_ID=localRoleInstance",
            "WEBSITE_INSTANCE_ID=localInstance",
            "HOSTNAME=$(sandbox-name)",
            "HOST_IP=$(host-ip)"
          ],
          "cwd": "/home/site/wwwroot",
          "capabilities": {
            "bounding": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ],
            "effective": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ],
            "permitted": [
              "CAP_CHOWN",
              "CAP_DAC_OVERRIDE",
              "CAP_FSETID",
              "CAP_FOWNER",
              "CAP_MKNOD",
              "CAP_NET_RAW",
              "CAP_SETGID",
              "CAP_SETUID",
              "CAP_SETFCAP",
              "CAP_SETPCAP",
              "CAP_NET_BIND_SERVICE",
              "CAP_SYS_CHROOT",
              "CAP_KILL",
              "CAP_AUDIT_WRITE"
            ]
          },
          "noNewPrivileges": true
        },
        "root": {
          "path": "/run/kata-containers/shared/containers/$(bundle-id)",
          "readonly": false
        },
        "hostname": "^three-containers$",
        "mounts": [
          {
            "destination": "/proc",
            "type": "proc",
            "source": "proc",
            "options": [
              "nosuid",
              "noexec",
              "nodev"
            ]
          },
          {
            "destination": "/dev",
            "type": "tmpfs",
            "source": "tmpfs",
            "options": [
              "nosuid",
              "strictatime",
              "mode=755",
              "size=65536k"
            ]
          },
          {
            "destination": "/dev/pts",
            "type": "devpts",
            "source": "devpts",
            "options": [
              "nosuid",
              "noexec",
              "newinstance",
              "ptmxmode=0666",
              "mode=0620",
              "gid=5"
            ]
          },
          {
            "destination": "/dev/shm",
            "type": "bind",
            "source": "/run/kata-containers/sandbox/shm",
            "options": [
              "rbind"
            ]
          },
          {
            "destination": "/dev/mqueue",
            "type": "mqueue",
            "source": "mqueue",
            "options": [
              "nosuid",
              "noexec",
              "nodev"
            ]
          },
          {
            "destination": "/sys",
            "type": "sysfs",
            "source": "sysfs",
            "options": [
              "nosuid",
              "noexec",
              "nodev",
              "ro"
            ]
          },
          {
            "destination": "/sys/fs/cgroup",
            "type": "cgroup",
            "source": "cgroup",
            "options": [
              "nosuid",
              "noexec",
              "nodev",
              "relatime",
              "ro"
            ]
          },
          {
            "destination": "/etc/hosts",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-hosts$",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/dev/termination-log",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-termination-log$",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/etc/hostname",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-hostname$",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/etc/resolv.conf",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-resolv.conf$",
            "options": [
              "rbind",
              "rprivate",
              "rw"
            ]
          },
          {
            "destination": "/var/run/secrets/kubernetes.io/serviceaccount",
            "type": "bind",
            "source": "^/run/kata-containers/shared/containers/$(bundle-id)-[a-z0-9]{16}-serviceaccount$",
            "options": [
              "rbind",
              "rprivate",
              "ro"
            ]
          }
        ],
        "annotations": {
          "io.katacontainers.pkg.oci.bundle_path": "/run/containerd/io.containerd.runtime.v2.task/k8s.io/$(bundle-id)",
          "io.katacontainers.pkg.oci.container_type": "pod_container",
          "io.kubernetes.cri.container-name": "go",
          "io.kubernetes.cri.container-type": "container",
          "io.kubernetes.cri.image-name": "mcr.microsoft.com/appsvc/go:1.19-bullseye_20230324.1",
          "io.kubernetes.cri.sandbox-id": "^[a-z0-9]{64}$",
          "io.kubernetes.cri.sandbox-name": "three-containers",
          "io.kubernetes.cri.sandbox-namespace": "default"
        },
        "linux": {
          "namespaces": [
            {
              "type": "ipc"
            },
            {
              "type": "uts"
            },
            {
              "type": "mount"
            }
          ],
          "maskedPaths": [
            "/proc/acpi",
            "/proc/kcore",
            "/proc/keys",
            "/proc/latency_stats",
            "/proc/timer_list",
            "/proc/timer_stats",
            "/proc/sched_debug",
            "/proc/scsi",
            "/sys/firmware"
          ],
          "readonlyPaths": [
            "/proc/asound",
            "/proc/bus",
            "/proc/fs",
            "/proc/irq",
            "/proc/sys",
            "/proc/sysrq-trigger"
          ]
        }
      },
      "storages": [
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=b745495839136d188b8e78c2dbe56316dd066d038d3036e5b88bdbc3c12b9105"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/a1d119799ffbd2b3de0137e6c77f3d327f12abb99013b5d3c35d3279b274ee36",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=4c5373e1bbed3628e5e0d46a379becf5f66dad9b40c37fc5de64acd1739a258c"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/1180d3fbd18b527a3835d335aa682312ac683daad0152f5a2f6a134751cf8550",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=71ac7759529579965ca678292cf3d044192fefbeb10f15ab8330e0b6ab9b2c84"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/c8d94447100f8c5c24c3c81c8a725c5ce309f18f7f39351252aa8bbcc27a30ff",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=dcd7f3597a2bb25de83b7404ca9e55cd52ca4ad89b95a5d5931e6e033d2ee45f"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/b4efc43fa232d1687d20bc31b8c69c3c66ff162c3905c9a79d726df08daf621d",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=c879816ae32adbfa778b2f059ac920059a2d949968ff71ad54a2e7e1a9145402"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/3c419e44d5286620ee9199c81fbfeeaf567bd7c8804032ecf19086d8ad7ef111",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=ed771fd80a695d17ec2ca32feb87d54b7c7fe962bd850b52384c73acb04152d7"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/1656f34d8fb6fc932277f3e59805e919018ad98523ad72a907eff1e8ff816cfb",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=57c02c406decf8722b446b6e0337fb997ef2260438e289d6c068d6d92d65e660"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/2b30f332cb422fff2ab347eb08612b50ba07d3ba9aa3caf3a536de2e5d948d96",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=feaec483e66ffbcf330a8247af6791ecc63c69e13339bfe6ef58f8bcade64204"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/4f6d7c1c3a201c22c7f1b549973ec19a97af30eab59443a5922db017d9e86a4e",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=b0778d3b89617a334acb5afe86e10e0a86fa789c765e0b7b9cdd4d048575d713"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/eee4de5de50c1204bab982eaedb0674f4858a6d22a07eb155b77382223607581",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=f0bb0aa369fc9be8cdf29e456cf92524969e08b8609988cec5ca36767c004f28"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/7235f5f193935f1391a99cd6c0a86cf3bfb145d434f11cedab45f7a6f2c75803",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=99a5efef227c8c13e059434ab64d404f683c9e36335e1bd35b2aca3282ce9477"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/8c8f9002eaffd1ddbe1a0ee7a2cf4e7b1b79f4d9e83d9593241e25402fb10d4a",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=0ae8f6b02e7b5221f9e452952720154a82b72c3b3546c997acdc859b6c4a1a5a"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/6f15e9abdd5a79b2b8fecaba2f2c51ce47b1b1c97f8089a26d1e3a1627d0ad66",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=c662e2bbac4813595fabd70e3f9810ad2c33bd563017de23090581967eced65e"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/2a9020898d0f9cf3ea2361ea04aee039d34df4d8c2963b014055845faeb5dd3c",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=8d46b879cc65ad4250e585f468b42321b12976f1fd2cffd0146a1ebe4fec7edb"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/6f59691257d6cd3a8fc6596f84fc2f57a00d25391ec9d10124774590d765ea6a",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=0c9d1b1f2c67fe900d5a1828f887e22de4baf58515f6e9fdbbdd5d036fda753f"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/7b12d7f0e02d273264fb62c25ad8121ce679f236ec02679772a92d1c5490b33f",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=36d43a39fe7af722a0e2e46fa5952aa38fa79ad311a86c0da0b759a7e3c41b14"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/516bd19607670eac967439805f30c20a0b1d6f2bd80654851c9b2940a6ea7ae6",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=c1743cb0a20b2004bf3f4e452402fa450306dc4d29e3e16f354c9b169594298c"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/73422336f6f14bbe272535cf4532f1e591390614cd2f79470a437d6fcc08dd8d",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=da2dc5e511ae935c6e29a321e31d9e5aa88349d7c7f4d4a2a90b022d69946199"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/c0ac1681d6a1ea33067e35aeb759ee7bbbb626648517bfaa394e578b57da8821",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "blk",
          "driver_options": [],
          "source": "",
          "fstype": "tar",
          "options": [
            "ro",
            "io.katacontainers.fs-opt.block_device=file",
            "io.katacontainers.fs-opt.is-layer",
            "io.katacontainers.fs-opt.root-hash=8f14d589ed977c978826c58f66ec0232017426fac3de5e10c4de5deb837a6797"
          ],
          "mount_point": "/run/kata-containers/sandbox/layers/5d4b7cf8cfd1c44e000467a2d50dc4649fc4d501380df858619ae77d8bf1d32d",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        },
        {
          "driver": "overlayfs",
          "driver_options": [],
          "source": "",
          "fstype": "tar-overlay",
          "options": [
            "io.katacontainers.fs-opt.layer-src-prefix=/var/lib/containerd/io.containerd.snapshotter.v1.tardev/layers",
            "io.katacontainers.fs-opt.layer=a1d119799ffbd2b3de0137e6c77f3d327f12abb99013b5d3c35d3279b274ee36,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=b745495839136d188b8e78c2dbe56316dd066d038d3036e5b88bdbc3c12b9105",
            "io.katacontainers.fs-opt.layer=1180d3fbd18b527a3835d335aa682312ac683daad0152f5a2f6a134751cf8550,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=4c5373e1bbed3628e5e0d46a379becf5f66dad9b40c37fc5de64acd1739a258c",
            "io.katacontainers.fs-opt.layer=c8d94447100f8c5c24c3c81c8a725c5ce309f18f7f39351252aa8bbcc27a30ff,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=71ac7759529579965ca678292cf3d044192fefbeb10f15ab8330e0b6ab9b2c84",
            "io.katacontainers.fs-opt.layer=b4efc43fa232d1687d20bc31b8c69c3c66ff162c3905c9a79d726df08daf621d,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=dcd7f3597a2bb25de83b7404ca9e55cd52ca4ad89b95a5d5931e6e033d2ee45f",
            "io.katacontainers.fs-opt.layer=3c419e44d5286620ee9199c81fbfeeaf567bd7c8804032ecf19086d8ad7ef111,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=c879816ae32adbfa778b2f059ac920059a2d949968ff71ad54a2e7e1a9145402",
            "io.katacontainers.fs-opt.layer=1656f34d8fb6fc932277f3e59805e919018ad98523ad72a907eff1e8ff816cfb,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=ed771fd80a695d17ec2ca32feb87d54b7c7fe962bd850b52384c73acb04152d7",
            "io.katacontainers.fs-opt.layer=2b30f332cb422fff2ab347eb08612b50ba07d3ba9aa3caf3a536de2e5d948d96,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=57c02c406decf8722b446b6e0337fb997ef2260438e289d6c068d6d92d65e660",
            "io.katacontainers.fs-opt.layer=4f6d7c1c3a201c22c7f1b549973ec19a97af30eab59443a5922db017d9e86a4e,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=feaec483e66ffbcf330a8247af6791ecc63c69e13339bfe6ef58f8bcade64204",
            "io.katacontainers.fs-opt.layer=eee4de5de50c1204bab982eaedb0674f4858a6d22a07eb155b77382223607581,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=b0778d3b89617a334acb5afe86e10e0a86fa789c765e0b7b9cdd4d048575d713",
            "io.katacontainers.fs-opt.layer=7235f5f193935f1391a99cd6c0a86cf3bfb145d434f11cedab45f7a6f2c75803,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=f0bb0aa369fc9be8cdf29e456cf92524969e08b8609988cec5ca36767c004f28",
            "io.katacontainers.fs-opt.layer=8c8f9002eaffd1ddbe1a0ee7a2cf4e7b1b79f4d9e83d9593241e25402fb10d4a,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=99a5efef227c8c13e059434ab64d404f683c9e36335e1bd35b2aca3282ce9477",
            "io.katacontainers.fs-opt.layer=6f15e9abdd5a79b2b8fecaba2f2c51ce47b1b1c97f8089a26d1e3a1627d0ad66,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=0ae8f6b02e7b5221f9e452952720154a82b72c3b3546c997acdc859b6c4a1a5a",
            "io.katacontainers.fs-opt.layer=2a9020898d0f9cf3ea2361ea04aee039d34df4d8c2963b014055845faeb5dd3c,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=c662e2bbac4813595fabd70e3f9810ad2c33bd563017de23090581967eced65e",
            "io.katacontainers.fs-opt.layer=6f59691257d6cd3a8fc6596f84fc2f57a00d25391ec9d10124774590d765ea6a,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=8d46b879cc65ad4250e585f468b42321b12976f1fd2cffd0146a1ebe4fec7edb",
            "io.katacontainers.fs-opt.layer=7b12d7f0e02d273264fb62c25ad8121ce679f236ec02679772a92d1c5490b33f,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=0c9d1b1f2c67fe900d5a1828f887e22de4baf58515f6e9fdbbdd5d036fda753f",
            "io.katacontainers.fs-opt.layer=516bd19607670eac967439805f30c20a0b1d6f2bd80654851c9b2940a6ea7ae6,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=36d43a39fe7af722a0e2e46fa5952aa38fa79ad311a86c0da0b759a7e3c41b14",
            "io.katacontainers.fs-opt.layer=73422336f6f14bbe272535cf4532f1e591390614cd2f79470a437d6fcc08dd8d,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=c1743cb0a20b2004bf3f4e452402fa450306dc4d29e3e16f354c9b169594298c",
            "io.katacontainers.fs-opt.layer=c0ac1681d6a1ea33067e35aeb759ee7bbbb626648517bfaa394e578b57da8821,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=da2dc5e511ae935c6e29a321e31d9e5aa88349d7c7f4d4a2a90b022d69946199",
            "io.katacontainers.fs-opt.layer=5d4b7cf8cfd1c44e000467a2d50dc4649fc4d501380df858619ae77d8bf1d32d,tar,ro,io.katacontainers.fs-opt.block_device=file,io.katacontainers.fs-opt.is-layer,io.katacontainers.fs-opt.root-hash=8f14d589ed977c978826c58f66ec0232017426fac3de5e10c4de5deb837a6797",
            "io.katacontainers.fs-opt.overlay-rw",
            "lowerdir=a1d119799ffbd2b3de0137e6c77f3d327f12abb99013b5d3c35d3279b274ee36:1180d3fbd18b527a3835d335aa682312ac683daad0152f5a2f6a134751cf8550:c8d94447100f8c5c24c3c81c8a725c5ce309f18f7f39351252aa8bbcc27a30ff:b4efc43fa232d1687d20bc31b8c69c3c66ff162c3905c9a79d726df08daf621d:3c419e44d5286620ee9199c81fbfeeaf567bd7c8804032ecf19086d8ad7ef111:1656f34d8fb6fc932277f3e59805e919018ad98523ad72a907eff1e8ff816cfb:2b30f332cb422fff2ab347eb08612b50ba07d3ba9aa3caf3a536de2e5d948d96:4f6d7c1c3a201c22c7f1b549973ec19a97af30eab59443a5922db017d9e86a4e:eee4de5de50c1204bab982eaedb0674f4858a6d22a07eb155b77382223607581:7235f5f193935f1391a99cd6c0a86cf3bfb145d434f11cedab45f7a6f2c75803:8c8f9002eaffd1ddbe1a0ee7a2cf4e7b1b79f4d9e83d9593241e25402fb10d4a:6f15e9abdd5a79b2b8fecaba2f2c51ce47b1b1c97f8089a26d1e3a1627d0ad66:2a9020898d0f9cf3ea2361ea04aee039d34df4d8c2963b014055845faeb5dd3c:6f59691257d6cd3a8fc6596f84fc2f57a00d25391ec9d10124774590d765ea6a:7b12d7f0e02d273264fb62c25ad8121ce679f236ec02679772a92d1c5490b33f:516bd19607670eac967439805f30c20a0b1d6f2bd80654851c9b2940a6ea7ae6:73422336f6f14bbe272535cf4532f1e591390614cd2f79470a437d6fcc08dd8d:c0ac1681d6a1ea33067e35aeb759ee7bbbb626648517bfaa394e578b57da8821:5d4b7cf8cfd1c44e000467a2d50dc4649fc4d501380df858619ae77d8bf1d32d"
          ],
          "mount_point": "/run/kata-containers/shared/containers/$(bundle-id)",
          "fs_group": {
            "group_id": 0,
            "group_change_policy": 0
          }
        }
      ],
      "exec_commands": []
    }
  ]
}
spec:
  restartPolicy: Never
  runtimeClassName: kata-cc
  initContainers:
    - name: busybox
      image: "mcr.microsoft.com/aks/e2e/library-busybox:master.220314.1-linux-amd64"
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
      command:
        - /bin/echo
        - hello
    - name: mariner-cli
      image: "mcr.microsoft.com/cbl-mariner/base/azure-cli:2.49.0-1-cm2.0.20230609-amd64"
      command:
        - az
        - "--help"
  containers:
    - name: go
      env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
      image: "mcr.microsoft.com/appsvc/go:1.19-bullseye_20230324.1"
      securityContext:
        allowPrivilegeEscalation: false
